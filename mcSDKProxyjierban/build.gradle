apply plugin: 'android-library'

dependencies {
    api fileTree(include: '*.jar', dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.0.0'
    implementation 'com.android.support:support-v4:26.0.0'
    //api project(':mengchuangSDK')

    //第三方渠道sdk
    /*api project(':opposdk')*/
    api project(':ucalisdk')
    /*api project(':vivosdk')*/
   /* api project(':HMS_SDK')*/

}

android {

    compileSdkVersion  27
    buildToolsVersion '27.0.3'
    publishNonDefault true
    defaultConfig {
        minSdkVersion    16
        targetSdkVersion  27
        versionCode 1
        versionName "1.0"
        flavorDimensions  "1"

    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        androidTest.setRoot('tests')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    aaptOptions {

        cruncherEnabled = false
        useNewCruncher = false

    }

    lintOptions {
        abortOnError false
    }
    dexOptions{
        javaMaxHeapSize "1g"
    }

}


def SDK_BASENAME = "mcProxy"
def SDK_VERSION = "_v2.1.0"
def sdkDestinationPath = "build"
def zipFile = file('build/intermediates/bundles/release/classes.jar')

task deleteBuild(type: Delete) {
    delete sdkDestinationPath + SDK_BASENAME + SDK_VERSION + ".jar"
}
task makeJar(type: Jar) {
    from zipTree(zipFile)
    from fileTree(dir: 'src/main',includes: ['assets/**'])//将assets目录打入jar包
    //去掉不要的类
    exclude('com/game/sdkproxy/BuildConfig.class')
    exclude('com/game/sdkproxy/BuildConfig\$*.class')
    baseName = SDK_BASENAME + SDK_VERSION
    destinationDir = file(sdkDestinationPath)
}
makeJar.dependsOn(build)